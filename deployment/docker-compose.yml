version: "3"
services:

  nginx:
    image: nginx:1-alpine-slim
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 127.0.0.1:4567:80
    restart: unless-stopped

  dashboard:
    container_name: dashboard
    command: sh -c 'rm -rf /home/node/app/node_modules/* && npm run dev'
    build:
      context: ../dashboard
      dockerfile: ../deployment/frontend/Dockerfile
    environment:
      NEXT_PUBLIC_GRAPHQL_GATEWAY_URL: "http://gateway-graphql:8080/v1/graphql"
    volumes:
      - ../dashboard:/home/node/app
      - exclude:/home/node/app/node_modules
    restart: unless-stopped


  node1-graphql:
    image: hasura/graphql-engine:v2.29.0
    depends_on:
      - node1-postgres
    environment:
      - HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://metrics:metrics@node1-postgres:5432/metrics
      - PG_DATABASE_URL=postgres://metrics:metrics@node1-postgres:5432/metrics
    env_file: ./graphql/local-graphql.env.default
    ports:
      - 8080:8080
    restart: unless-stopped

  node1-postgres:
    image: postgres:15.3-alpine
    env_file: ./postgres/postgres.env.default
    volumes:
      - node1pg:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped

  node2-graphql:
    image: hasura/graphql-engine:v2.29.0
    depends_on:
      - node2-postgres
    environment:
      - HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://metrics:metrics@node2-postgres:5432/metrics
      - PG_DATABASE_URL=postgres://metrics:metrics@node2-postgres:5432/metrics
    env_file: ./graphql/local-graphql.env.default
    ports:
      - 8081:8080
    restart: unless-stopped

  node2-postgres:
    image: postgres:15.3-alpine
    env_file: ./postgres/postgres.env.default
    volumes:
      - node2pg:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped

  gateway-graphql:
    image: hasura/graphql-engine:v2.29.0
    depends_on:
      - gateway-postgres
    environment:
      - HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://metrics:metrics@gateway-postgres:5432/metrics
    env_file: ./graphql/gateway-graphql.env.default
    ports:
      - 8082:8080
    restart: unless-stopped

  gateway-postgres:
    image: postgres:15.3-alpine
    env_file: ./postgres/postgres.env.default
    volumes:
      - gatewaypg:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped


volumes:
  node1pg:
  node2pg:
  gatewaypg:
  exclude:
